// CONSTANTS
const fontName = "ATHANASIUS";
const graveAccent = "\u0300";
const overline = "\u0305";
const dotAbove = "\u0307"; //'U+0307' 
const dotBelow = "\u0323"; //U+0323;
const sima = "\u2CEA";
const JimkinCombining = {
  before: "COMBINE_WITH_CHAR_BEFORE",
  after: "COMBINE_WITH_CHAR_AFTER",
  none: "NONE",
};

const COPTIC_FONT_UNICODE_COL: number = 4;


async function convertFontWithoutAPI(text?: string, font: string = fontName, jimkin: string = JimkinCombining.before) {
  if (!fontsMap[0].includes(font)) {
    alert('Font: ' + font + ' is not supported');
    return undefined
  };

  if (font === "ATHANASIUS")
    text = text
      .replaceAll('è', '')
      .replaceAll(' ?', "/")
      .replaceAll('?', '/');

  if (font === "COPTIC1")
    jimkin = JimkinCombining.after;
  else if (font === "ATHANASIUS")
    jimkin = JimkinCombining.before;
  
  console.log("font = ", font);

  text = text.
    replaceAll('\r', '\n')
    .split('\n')
    .map(parag => convertCopticText(
      font,
      parag,
      jimkin
    )
    )
    .join('\\n');
  if (font === 'CS_AVVA_SHENOUDA') {
    text = text
      .replaceAll("É", dotAbove)
      .replaceAll("U+0300", `  ${graveAccent}`)
      .replaceAll('@', ':')
      .replaceAll('=', overline)
      .replaceAll('¡', sima)
      .replaceAll('~', dotBelow);
  }
  else if (font === "ATHANASIUS") {
    text = text
      .replaceAll('è', '')
      .replaceAll('?', overline)
      ;
  }
  alert(text);
  console.log('Converted text = ', text)
  return text
}


/**
 * converts the given string into coptic unicode characters if they match characters of the supported non-unicode fonts
 * @param {*} non-unicode font name of the provided coptic non-unicode text
 * @param {*} coptic non-unicode text
 * @param {*} jimkin jimkin combining method (COMBINE_WITH_CHAR_BEFORE, COMBINE_WITH_CHAR_AFTER, NONE)
 * @returns converted text
 */
function convertCopticText(font: string, text: string, jimkin: string, swap: boolean = false): string {
  if (swap)
    return switchCharForJimkin(Array.from(text), jimkin);
  const columnIndex: number = fontsMap[0].indexOf(font);
  
  
  const array = Array.from(text).map((letter) => {
    const row = fontsMap.find(row => row[columnIndex] === letter);
    if (!row) return letter;
    else return fontsMap[fontsMap.indexOf(row)][COPTIC_FONT_UNICODE_COL];//This is the javascript of the letter
  });
  
  /*
  let rowIndex: number;
  const sb = [];
  for (let i = 0; i < text.length; i++) {

    if (text[i] == " ") {
      sb.push(" ");
      continue;
    }
    rowIndex = fontsMap.indexOf(fontsMap.find(row => row[columnIndex] === text[i]));
    let unicode: string;

    if (rowIndex >= 0) unicode = fontsMap[rowIndex][COPTIC_FONT_UNICODE_COL];


    if (unicode) sb.push(unicode);
    else sb.push(text[i])
  }
  */

  return removeCharAfterOverline(switchCharForJimkin(array, jimkin)).normalize('NFC');

  /**
   * Combines the Jimkin grave accet with either the letter before it or the letter after it. 
   * @param {string[]} textArray 
   * @param {string} jimkinCombining - the Jimkin combining options (with the letter before it, with the letter after it, or none). If none, it returns a string from textArray
   * @returns {string} - a string representing the text after combining the Jimkin accent
   */
  function switchCharForJimkin(textArray: string[], jimkinCombining: string): string {
    if (!textArray) return;;
    if (jimkinCombining === JimkinCombining.none)
      return textArray.join('');
    // Traverse the string
    let stringbuffer = [];

    for (let i = 0; i < textArray.length; i++) {
      if (textArray[i] == graveAccent) i = hasJimkin(i);
      else stringbuffer.push(textArray[i]);
    }

    //return stringbuffer.join("");
    return stringbuffer.join('')

    function hasJimkin(i: number): number {
      if (jimkinCombining === JimkinCombining.after) {
        stringbuffer.pop(); // remove last char
        stringbuffer.push(textArray[i - 1] + graveAccent);
      } else if (jimkinCombining === JimkinCombining.before) {
        stringbuffer.push(textArray[i + 1] + graveAccent);
        i++
      }
      return i
    }
  };
  /**
   * remove char after overline, because its empty
   *
   * @param {*} unicodeString
   * @returns
   */
  function removeCharAfterOverline(unicodeString: string): string {
    return unicodeString
    if (font === 'ATHANASIUS') return unicodeString;

    if (!unicodeString) return unicodeString;
    // Traverse the string
    let stringbuffer = [];
    for (let i = 0; i < unicodeString.length; i++) {
      stringbuffer.push(unicodeString[i]);
      if (unicodeString[i] === overline) i++ // skip next char by incrementing

    }
    return stringbuffer.join("");
  };
}


const fontsMap = [
  [
    "CharName",
    "DEC",
    "Hex",
    "Javascript",
    "Code",
    "Unicode",
    "CS",
    "NEW_ATHANASIUS",
    "ATHANASIUS",
    "AVVA_SHENOUDA",
    "CS_AVVA_SHENOUDA",
    "AVVA_MARCOS",
    "AVVA_BISHOY",
    "BISHOP_TADROS",
    "SAINT_ABRAHAM",
    "ANTONIOUS",
    "ANTONIOUS_THIN",
    "ANTONIOUSJ",
    "ANTONIOUSOL",
    "COPTIC",
    "COPTIC1",
    "COPTICII",
    "COPTONEW",
    "KOPTOS",
    "SAINTGEORGES",
    "KYRILLOS",
    "KOPTWI3",
    "KPTWI3B",
    "AVVA_KYRILLOS",
    "SAINT_MARINA",
    "SPACHMIM",
    "MENA1",
    "POPE_SHENOUDA_III",
    "NOPHER",
    "PISHOI",
  ],
  [
    "alpha_capital",
    "11392",
    "U+2C80",
    "\u2C80",
    "Ⲁ",
    "Ⲁ",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
  ],
  [
    "alpha_small",
    "11393",
    "U+2C81",
    "\u2C81",
    "ⲁ",
    "ⲁ",
    "a",
    "a",
    "a",
    "a",
    "a",
    "",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
  ],
  [
    "veeta_capital",
    "11394",
    "U+2C82",
    "\u2C82",
    "Ⲃ",
    "Ⲃ",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
    "",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
    "B",
  ],
  [
    "veeta_small",
    "11395",
    "U+2C83",
    "\u2C83",
    "ⲃ",
    "ⲃ",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
    "b",
  ],
  [
    "gamma_capital",
    "11396",
    "U+2C84",
    "\u2C84",
    "Ⲅ",
    "Ⲅ",
    "G",
    "G",
    "G",
    "J",
    "G",
    "J",
    "J",
    "G",
    "J",
    "G",
    "G",
    "G",
    "G",
    "",
    "G",
    "G",
    "G",
    "G",
    "J",
    "G",
    "G",
    "G",
    "G",
    "G",
    "G",
    "G",
    "G",
    "G",
    "G",
  ],
  [
    "gamma_small",
    "11397",
    "U+2C85",
    "\u2C85",
    "ⲅ",
    "ⲅ",
    "g",
    "g",
    "g",
    "j",
    "g",
    "g",
    "j",
    "g",
    "j",
    "g",
    "g",
    "g",
    "g",
    "g",
    "g",
    "g",
    "g",
    "g",
    "j",
    "g",
    "g",
    "g",
    "g",
    "g",
    "g",
    "g",
    "g",
    "g",
    "g",
  ],
  [
    "delta_capital",
    "11398",
    "U+2C86",
    "\u2C86",
    "Ⲇ",
    "Ⲇ",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
    "",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
    "D",
  ],
  [
    "delta_small",
    "11399",
    "U+2C87",
    "\u2C87",
    "ⲇ",
    "ⲇ",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
    "d",
  ],
  [
    "ei_capital",
    "11400",
    "U+2C88",
    "\u2C88",
    "Ⲉ",
    "Ⲉ",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
  ],
  [
    "ei_small",
    "11401",
    "U+2C89",
    "\u2C89",
    "ⲉ",
    "ⲉ",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
  ],
  [
    "zeeta_capital",
    "11404",
    "U+2C8C",
    "\u2C8C",
    "Ⲍ",
    "Ⲍ",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
    "Z",
  ],
  [
    "zeeta_small",
    "11405",
    "U+2C8D",
    "\u2C8D",
    "ⲍ",
    "ⲍ",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
    "z",
  ],
  [
    "eeta_capital",
    "11406",
    "U+2C8E",
    "\u2C8E",
    "Ⲏ",
    "Ⲏ",
    "Y",
    "?",
    "H",
    "#",
    "Y",
    "#",
    "#",
    "H",
    "#",
    "?",
    "?",
    "?",
    "?",
    "",
    "?",
    "Y",
    "Y",
    "Y",
    "#",
    "?",
    "Y",
    "Y",
    "Y",
    "Y",
    "H",
    "H",
    "H",
    "?",
    "?",
  ],
  [
    "eeta_small",
    "11407",
    "U+2C8F",
    "\u2C8F",
    "ⲏ",
    "ⲏ",
    "y",
    "/",
    "h",
    "3",
    "y",
    "3",
    "3",
    "h",
    "3",
    "/",
    "/",
    "/",
    "8",
    "h",
    "/",
    "y",
    "y",
    "y",
    "3",
    ";",
    "y",
    "y",
    "y",
    "y",
    "h",
    "h",
    "h",
    "",
    "",
  ],
  [
    "theeta_capital",
    "11408",
    "U+2C90",
    "\u2C90",
    "Ⲑ",
    "Ⲑ",
    ":",
    "Y",
    "Q",
    ")",
    ":",
    "0",
    ")",
    "Q",
    ")",
    "Y",
    "Y",
    "Y",
    "Y",
    "",
    "Y",
    "",
    ":",
    ":",
    ")",
    "Y",
    ":",
    ":",
    ":",
    ":",
    "q",
    "Q",
    "Q",
    "Y",
    "Y",
  ],
  [
    "theeta_small",
    "11409",
    "U+2C91",
    "\u2C91",
    "ⲑ",
    "ⲑ",
    ";",
    "y",
    "q",
    "0",
    ";",
    ")",
    "0",
    "q",
    "0",
    "y",
    "y",
    "y",
    "y",
    "c",
    "y",
    "",
    ";",
    ";",
    "0",
    "y",
    ";",
    ";",
    ";",
    ";",
    "",
    "q",
    "q",
    "y",
    "y",
  ],
  [
    "iota_capital",
    "11410",
    "U+2C92",
    "\u2C92",
    "Ⲓ",
    "Ⲓ",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
  ],
  [
    "iota_small",
    "11411",
    "U+2C93",
    "\u2C93",
    "ⲓ",
    "ⲓ",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
  ],
  [
    "kappa_capital",
    "11412",
    "U+2C94",
    "\u2C94",
    "Ⲕ",
    "Ⲕ",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
    "",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
    "K",
  ],
  [
    "kappa_small",
    "11413",
    "U+2C95",
    "\u2C95",
    "ⲕ",
    "ⲕ",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
    "k",
  ],
  [
    "lavla_capital",
    "11414",
    "U+2C96",
    "\u2C96",
    "Ⲗ",
    "Ⲗ",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
    "",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
    "L",
  ],
  [
    "lavla_small",
    "11415",
    "U+2C97",
    "\u2C97",
    "ⲗ",
    "ⲗ",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
    "l",
  ],
  [
    "mei_capital",
    "11416",
    "U+2C98",
    "\u2C98",
    "Ⲙ",
    "Ⲙ",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
    "",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
    "M",
  ],
  [
    "mei_small",
    "11417",
    "U+2C99",
    "\u2C99",
    "ⲙ",
    "ⲙ",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
    "m",
  ],
  [
    "nei_capital",
    "11418",
    "U+2C9A",
    "\u2C9A",
    "Ⲛ",
    "Ⲛ",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
    "",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
    "N",
  ],
  [
    "nei_small",
    "11419",
    "U+2C9B",
    "\u2C9B",
    "ⲛ",
    "ⲛ",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
    "n",
  ],
  [
    "ksi_capital",
    "11420",
    "U+2C9C",
    "\u2C9C",
    "Ⲝ",
    "Ⲝ",
    "X",
    "X",
    "{",
    "&",
    "X",
    "&",
    "&",
    "J",
    "&",
    "X",
    "X",
    "X",
    "X",
    "",
    "X",
    "X",
    "X",
    "X",
    "&",
    "X",
    "X",
    "X",
    "X",
    "X",
    "",
    "X",
    "J",
    "X",
    "X",
  ],
  [
    "ksi_small",
    "11421",
    "U+2C9D",
    "\u2C9D",
    "ⲝ",
    "ⲝ",
    "x",
    "x",
    "[",
    "7",
    "x",
    "x7",
    "7",
    "j",
    "7",
    "x",
    "x",
    "x",
    "x",
    "3",
    "x",
    "x",
    "x",
    "x",
    "7",
    "x",
    "x",
    "x",
    "x",
    "x",
    "",
    "x",
    "j",
    "x",
    "x",
  ],
  [
    "o_capital",
    "11422",
    "U+2C9E",
    "\u2C9E",
    "Ⲟ",
    "Ⲟ",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
  ],
  [
    "o_small",
    "11423",
    "U+2C9F",
    "\u2C9F",
    "ⲟ",
    "ⲟ",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
  ],
  [
    "pi_capital",
    "11424",
    "U+2CA0",
    "\u2CA0",
    "Ⲡ",
    "Ⲡ",
    "P",
    "P",
    "P",
    "P",
    "P",
    "P",
    "P",
    "U",
    "P",
    "P",
    "P",
    "P",
    "P",
    "",
    "P",
    "P",
    "P",
    "P",
    "P",
    "P",
    "P",
    "P",
    "P",
    "P",
    "P",
    "P",
    "U",
    "P",
    "P",
  ],
  [
    "pi_small",
    "11425",
    "U+2CA1",
    "\u2CA1",
    "ⲡ",
    "ⲡ",
    "p",
    "p",
    "p",
    "p",
    "p",
    "p",
    "p",
    "u",
    "p",
    "p",
    "p",
    "p",
    "p",
    "p",
    "p",
    "p",
    "p",
    "p",
    "p",
    "p",
    "p",
    "p",
    "p",
    "p",
    "p",
    "p",
    "u",
    "p",
    "p",
  ],
  [
    "ro_capital",
    "11426",
    "U+2CA2",
    "\u2CA2",
    "Ⲣ",
    "Ⲣ",
    "R",
    "R",
    "R",
    "R",
    "R",
    "R",
    "R",
    "P",
    "R",
    "R",
    "R",
    "R",
    "R",
    "",
    "R",
    "R",
    "R",
    "R",
    "R",
    "R",
    "R",
    "R",
    "R",
    "R",
    "R",
    "R",
    "P",
    "R",
    "R",
  ],
  [
    "ro_small",
    "11427",
    "U+2CA3",
    "\u2CA3",
    "ⲣ",
    "ⲣ",
    "r",
    "r",
    "r",
    "r",
    "r",
    "r",
    "r",
    "p",
    "r",
    "r",
    "r",
    "r",
    "r",
    "r",
    "r",
    "r",
    "r",
    "r",
    "r",
    "r",
    "r",
    "r",
    "r",
    "r",
    "r",
    "r",
    "p",
    "r",
    "r",
  ],
  [
    "sima_capital",
    "11428",
    "U+2CA4",
    "\u2CA4",
    "Ⲥ",
    "Ⲥ",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
    "",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
    "C",
  ],
  [
    "sima_small",
    "11429",
    "U+2CA5",
    "\u2CA5",
    "ⲥ",
    "ⲥ",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
    "s",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
    "c",
  ],
  [
    "tav_capital",
    "11430",
    "U+2CA6",
    "\u2CA6",
    "Ⲧ",
    "Ⲧ",
    "T",
    "T",
    "T",
    "T",
    "T",
    "T",
    "T",
    "+",
    "T",
    "T",
    "T",
    "T",
    "T",
    "",
    "T",
    "T",
    "T",
    "T",
    "T",
    "T",
    "T",
    "T",
    "T",
    "T",
    "T",
    "T",
    "+",
    "T",
    "T",
  ],
  [
    "tav_small",
    "11431",
    "U+2CA7",
    "\u2CA7",
    "ⲧ",
    "ⲧ",
    "t",
    "t",
    "t",
    "t",
    "t",
    "t",
    "t",
    "=",
    "t",
    "t",
    "t",
    "t",
    "t",
    "t",
    "t",
    "t",
    "t",
    "t",
    "t",
    "t",
    "t",
    "t",
    "t",
    "t",
    "t",
    "t",
    "=",
    "t",
    "t",
  ],
  [
    "epsilon_capital",
    "11432",
    "U+2CA8",
    "\u2CA8",
    "Ⲩ",
    "Ⲩ",
    "U",
    "U",
    "U",
    "V",
    "U",
    "V",
    "V",
    "Y",
    "V",
    "U",
    "U",
    "U",
    "U",
    "",
    "U",
    "U",
    "U",
    "U",
    "V",
    "U",
    "U",
    "U",
    "U",
    "U",
    "Y",
    "Y",
    "Y",
    "U",
    "U",
  ],
  [
    "epsilon_small",
    "11433",
    "U+2CA9",
    "\u2CA9",
    "ⲩ",
    "ⲩ",
    "u",
    "u",
    "u",
    "v",
    "u",
    "",
    "v",
    "y",
    "v",
    "u",
    "u",
    "u",
    "u",
    "u",
    "u",
    "u",
    "u",
    "u",
    "v",
    "u",
    "u",
    "u",
    "u",
    "u",
    "y",
    "y",
    "y",
    "u",
    "u",
  ],
  [
    "fey_capital",
    "11434",
    "U+2CAA",
    "\u2CAA",
    "Ⲫ",
    "Ⲫ",
    "V",
    "V",
    "V",
    "F",
    "V",
    "F",
    "F",
    "F",
    "F",
    "V",
    "V",
    "V",
    "V",
    "",
    "V",
    "",
    "",
    "",
    "F",
    "V",
    "",
    "",
    "",
    "",
    "",
    "v",
    "F",
    "V",
    "V",
  ],
  [
    "fey_small",
    "11435",
    "U+2CAB",
    "\u2CAB",
    "ⲫ",
    "ⲫ",
    "v",
    "v",
    "v",
    "f",
    "v",
    "",
    "f",
    "f",
    "f",
    "v",
    "v",
    "v",
    "v",
    "v",
    "v",
    "v",
    "v",
    "v",
    "f",
    "v",
    "v",
    "v",
    "v",
    "v",
    "f",
    "U",
    "f",
    "v",
    "v",
  ],
  [
    "key_capital",
    "11436",
    "U+2CAC",
    "\u2CAC",
    "Ⲭ",
    "Ⲭ",
    "<",
    "<",
    "X",
    "X",
    "<",
    "X",
    "X",
    "X",
    "X",
    "<",
    "<",
    "<",
    "<",
    "",
    "<",
    "",
    "",
    "",
    "X",
    "<",
    "",
    "",
    "",
    "",
    "X",
    "u",
    "X",
    "<",
    "<",
  ],
  [
    "key_small",
    "11437",
    "U+2CAD",
    "\u2CAD",
    "ⲭ",
    "ⲭ",
    ",",
    ",",
    "x",
    "x",
    ",",
    "",
    "x",
    "x",
    "x",
    ",",
    ",",
    ",",
    ",",
    "y",
    ",",
    "",
    "",
    "",
    "x",
    ",",
    "",
    "",
    "",
    "",
    "x",
    "",
    "x",
    ",",
    ",",
  ],
  [
    "psi_capital",
    "11438",
    "U+2CAE",
    "\u2CAE",
    "Ⲯ",
    "Ⲯ",
    '"',
    '"',
    "Y",
    "Y",
    '"',
    "Y",
    "Y",
    "R",
    "Y",
    '"',
    '"',
    '"',
    '"',
    "",
    '"',
    '"',
    '"',
    '"',
    "Y",
    '"',
    '"',
    '"',
    '"',
    '"',
    '"',
    "",
    "R",
    '"',
    '"',
  ],
  [
    "psi_small",
    "11439",
    "U+2CAF",
    "\u2CAF",
    "ⲯ",
    "ⲯ",
    "'",
    "'",
    "y",
    "y",
    "'",
    "",
    "y",
    "r",
    "y",
    "'",
    "'",
    "'",
    "'",
    "",
    "'",
    "'",
    "'",
    "'",
    "y",
    "'",
    "'",
    "'",
    "'",
    "'",
    "'",
    "",
    "r",
    "'",
    "'",
  ],
  [
    "oou_capital",
    "11440",
    "U+2CB0",
    "\u2CB0",
    "Ⲱ",
    "Ⲱ",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
    "",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
    "W",
  ],
  [
    "oou_small",
    "11441",
    "U+2CB1",
    "\u2CB1",
    "ⲱ",
    "ⲱ",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
  ],
  [
    "shai_capital",
    "994",
    "U+03E2",
    "\u03E2",
    "Ϣ",
    "Ϣ",
    "S",
    "S",
    "}",
    "@",
    "S",
    "2",
    "@",
    "\\",
    "@",
    "S",
    "S",
    "S",
    "S",
    "",
    "S",
    "S",
    "S",
    "S",
    "@",
    "S",
    "S",
    "S",
    "S",
    "S",
    "S",
    "S",
    "\\",
    "S",
    "S",
  ],
  [
    "shai_small",
    "995",
    "U+03E3",
    "\u03E3",
    "ϣ",
    "ϣ",
    "s",
    "s",
    "]",
    "2",
    "s",
    "s",
    "2",
    "|",
    "2",
    "s",
    "s",
    "s",
    "s",
    "",
    "s",
    "s",
    "s",
    "s",
    "2",
    "s",
    "s",
    "s",
    "s",
    "s",
    "s",
    "s",
    "|",
    "s",
    "s",
  ],
  [
    "fai_capital",
    "996",
    "U+03E4",
    "\u03E4",
    "3,00E+04",
    "Ϥ",
    "F",
    "F",
    "F",
    "$",
    "F",
    "4",
    "$",
    "}",
    "$",
    "F",
    "F",
    "F",
    "F",
    "",
    "F",
    "F",
    "F",
    "F",
    "$",
    "F",
    "F",
    "F",
    "F",
    "F",
    "F",
    "F",
    "}",
    "F",
    "F",
  ],
  [
    "fai_small",
    "997",
    "U+03E5",
    "\u03E5",
    "ϥ",
    "ϥ",
    "f",
    "f",
    "f",
    "4",
    "f",
    "$",
    "4",
    "]",
    "4",
    "f",
    "f",
    "f",
    "f",
    "f",
    "f",
    "f",
    "f",
    "f",
    "4",
    "f",
    "f",
    "f",
    "f",
    "f",
    "",
    "f",
    "]",
    "f",
    "f",
  ],
  [
    "khai_capital",
    "998",
    "U+03E6",
    "\u03E6",
    "Ϧ",
    "Ϧ",
    "Q",
    "Q",
    '"',
    "Q",
    "Q",
    "Q",
    "Q",
    "^",
    "Q",
    "Q",
    "Q",
    "Q",
    "Q",
    "",
    "Q",
    "Q",
    "Q",
    "Q",
    "Q",
    "Q",
    "Q",
    "Q",
    "Q",
    "Q",
    "Q",
    ":",
    "^",
    "Q",
    "Q",
  ],
  [
    "khai_small",
    "999",
    "U+03E7",
    "\u03E7",
    "ϧ",
    "ϧ",
    "q",
    "q",
    "'",
    "q",
    "q",
    "q",
    "q",
    "~",
    "q",
    "q",
    "q",
    "q",
    "q",
    "",
    "q",
    "q",
    "q",
    "q",
    "q",
    "q",
    "q",
    "q",
    "q",
    "q",
    "",
    "",
    "~",
    "q",
    "q",
  ],
  [
    "hori_capital",
    "1000",
    "U+03E8",
    "\u03E8",
    "Ϩ",
    "Ϩ",
    "H",
    "H",
    "|",
    "H",
    "H",
    "H",
    "H",
    "S",
    "H",
    "H",
    "H",
    "H",
    "H",
    "",
    "H",
    "H",
    "H",
    "H",
    "H",
    "H",
    "H",
    "H",
    "H",
    "H",
    "",
    "<",
    "S",
    "H",
    "H",
  ],
  [
    "hori_small",
    "1001",
    "U+03E9",
    "\u03E9",
    "ϩ",
    "ϩ",
    "h",
    "h",
    "\\",
    "h",
    "h",
    "h",
    "h",
    "s",
    "h",
    "h",
    "h",
    "h",
    "h",
    "",
    "h",
    "h",
    "h",
    "h",
    "h",
    "h",
    "h",
    "h",
    "h",
    "h",
    "6",
    ",",
    "s",
    "h",
    "h",
  ],
  [
    "jinja_capital",
    "1002",
    "U+03EA",
    "\u03EA",
    "Ϫ",
    "Ϫ",
    "J",
    "J",
    "J",
    "G",
    "J",
    "G",
    "G",
    "V",
    "G",
    "J",
    "J",
    "J",
    "J",
    "",
    "J",
    "J",
    "J",
    "J",
    "G",
    "J",
    "J",
    "J",
    "J",
    "J",
    "1",
    "J",
    "V",
    "J",
    "J",
  ],
  [
    "jinja_small",
    "1003",
    "U+03EB",
    "\u03EB",
    "ϫ",
    "ϫ",
    "j",
    "j",
    "j",
    "g",
    "j",
    "j",
    "g",
    "v",
    "g",
    "j",
    "j",
    "j",
    "j",
    "j",
    "j",
    "j",
    "j",
    "j",
    "g",
    "j",
    "j",
    "j",
    "j",
    "j",
    "2",
    "j",
    "v",
    "j",
    "j",
  ],
  [
    "tcheema_capital",
    "1004",
    "U+03EC",
    "\u03EC",
    "Ϭ",
    "Ϭ",
    "{",
    "{",
    "S",
    "S",
    "{",
    "S",
    "S",
    "{",
    "S",
    "{",
    "{",
    "{",
    "{",
    "",
    "{",
    "{",
    "{",
    "{",
    "S",
    "{",
    "{",
    "{",
    "{",
    "{",
    "3",
    "{",
    "{",
    "{",
    "{",
  ],
  [
    "tcheema_small",
    "1005",
    "U+03ED",
    "\u03ED",
    "ϭ",
    "ϭ",
    "[",
    "[",
    "s",
    "s",
    "[",
    "",
    "s",
    "[",
    "s",
    "[",
    "[",
    "[",
    "[",
    "",
    "[",
    "[",
    "[",
    "[",
    "s",
    "[",
    "[",
    "[",
    "[",
    "[",
    "4",
    "[",
    "[",
    "[",
    "[",
  ],
  [
    "tii_capital",
    "1006",
    "U+03EE",
    "\u03EE",
    "Ϯ",
    "Ϯ",
    "}",
    "}",
    ":",
    "%",
    "}",
    "5",
    "%",
    "T",
    "%",
    "}",
    "}",
    "}",
    "}",
    "",
    "}",
    "}",
    "}",
    "}",
    "%",
    "}",
    "}",
    "}",
    "}",
    "}",
    "",
    "}",
    "T",
    "}",
    "}",
  ],
  [
    "tii_small",
    "1007",
    "U+03EF",
    "\u03EF",
    "ϯ",
    "ϯ",
    "]",
    "]",
    ";",
    "5",
    "]",
    "%",
    "5",
    "t",
    "5",
    "]",
    "]",
    "]",
    "]",
    "+",
    "]",
    "]",
    "]",
    "]",
    "5",
    "]",
    "]",
    "]",
    "]",
    "]",
    "5",
    "]",
    "t",
    "]",
    "]",
  ],
  [
    "cou_small",
    "11403",
    "U+2C8B",
    "\u2C8B",
    "ⲋ",
    "ⲋ",
    "^",
    "6",
    ",",
    "6",
    "^",
    "6",
    "",
    "*",
    "",
    "",
    "",
    "",
    "",
    "",
    "6",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ">",
    "*",
    "",
    "",
  ],
  [
    "cou_capital",
    "11402",
    "U+2C8A;",
    "\u2C8A",
    "Ⲋ",
    "Ⲋ",
    "",
    "",
    "<",
    "",
    "^",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
  ],
  [
    "symbol_mi_ro",
    "11493",
    "U+2CE5",
    "\u2CE5",
    "⳥",
    "",
    "",
    "",
    "",
    "",
    "",
    "^",
    "U",
    "",
    "u",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "U",
    "",
    "",
    "",
    "",
    "",
    "=",
    ".",
    "",
    "%",
    "%",
  ],
  [
    "jinkim",
    "768",
    "U+0300",
    "\u0300",
    "̀",
    "`",
    "`",
    "`è",
    "`",
    "",
    "`",
    "",
    "",
    "",
    "",
    "",
    "",
    "ä",
    "ä",
    "~",
    "~",
    "",
    "",
    "",
    "",
    "ä",
    "ä",
    "ä",
    "ä",
    "ä",
    "",
    "ä",
    "",
    "ä",
    "ä",
  ],
  [
    "combining_overline",
    "773",
    "U+0305",
    "\u0305",
    "̅",
    "̅ ",
    "=",
    "/",
    "/",
    "",
    "=",
    "",
    "",
    "",
    "",
    "",
    "",
    "ö",
    "ö",
    "",
    "#",
    "",
    "",
    "",
    "",
    "ö",
    "ö",
    "ö",
    "ö",
    "ö",
    "",
    "ö",
    "",
    "ö",
    "ö",
  ],
  [
    "combining_overline_double",
    "831",
    "U+033F",
    "\u033F",
    "̿",
    "̿ ",
    "",
    "•",
    "",
    "",
    "̿ ",
    "",
    "",
    "",
    "",
    "",
    "",
    "ü",
    "ü",
    "",
    "",
    "",
    "",
    "",
    "",
    "ü",
    "ü",
    "ü",
    "ü",
    "ü",
    "",
    "ü",
    "",
    "ü",
    "ü",
  ],
  [
    "thousands_mark",
    "66272",
    "U+102E1",
    "\u102E1",
    "ီ1",
    "𐋠",
    "",
    "",
    "",
    "",
    "𐋠",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
  ],
  [
    "digit_one",
    "66273",
    "U+102E1",
    "\u102E1",
    "ီ1",
    "ⲁ̅",
    "",
    "1",
    "",
    "",
    "ⲁ̅",
    "",
    "",
    "1",
    "",
    "1",
    "",
    "Ä",
    "Ä",
    "A",
    "1",
    "",
    "",
    "",
    "",
    "1",
    "Ä",
    "Ä",
    "Ä",
    "Ä",
    "",
    "Ä",
    "1",
    "1",
    "1",
  ],
  [
    "digit_two",
    "66274",
    "U+102E2",
    "\u102E2",
    "ီ2",
    "ⲃ̅",
    "",
    "2",
    "",
    "",
    "ⲃ̅",
    "",
    "",
    "2",
    "",
    "2",
    "",
    "Ö",
    "Ö",
    "B",
    "2",
    "",
    "",
    "",
    "",
    "2",
    "Ö",
    "Ö",
    "Ö",
    "Ö",
    "",
    "Ö",
    "2",
    "2",
    "2",
  ],
  [
    "digit_three",
    "66275",
    "U+102E3",
    "\u102E3",
    "ီ3",
    "ⲅ̅",
    "",
    "3",
    "",
    "",
    "ⲅ̅",
    "",
    "",
    "3",
    "",
    "3",
    "",
    "Ü",
    "Ü",
    "G",
    "3",
    "",
    "",
    "",
    "",
    "3",
    "Ü",
    "Ü",
    "Ü",
    "Ü",
    "",
    "Ü",
    "3",
    "3",
    "3",
  ],
  [
    "digit_four",
    "66276",
    "U+102E4",
    "\u102E4",
    "ီ4",
    "ⲇ̅",
    "",
    "4",
    "",
    "ä",
    "ⲇ̅",
    "",
    "",
    "4",
    "",
    "4",
    "+",
    "+",
    "+",
    "D",
    "4",
    "+",
    "+",
    "+",
    "",
    "4",
    "+",
    "+",
    "+",
    "+",
    "",
    "+",
    "4",
    "4",
    "4",
  ],
  [
    "digit_five",
    "66277",
    "U+102E5",
    "\u102E5",
    "ီ5",
    "ⲉ̅",
    "",
    "5",
    "",
    "",
    "ⲉ̅",
    "",
    "",
    "5",
    "",
    "5",
    "*",
    "*",
    "*",
    "E",
    "5",
    "*",
    "*",
    "*",
    "",
    "5",
    "*",
    "*",
    "*",
    "*",
    "",
    "*",
    "5",
    "5",
    "5",
  ],
  [
    "digit_six",
    "66278",
    "U+102E6",
    "\u102E6",
    "ီ6",
    "ⲋ",
    "",
    "6",
    ",",
    "^",
    "ⲋ",
    "",
    "",
    "6",
    "",
    "6",
    "#",
    "#",
    "#",
    "",
    "6",
    "#",
    "#",
    "#",
    "",
    "6",
    "#",
    "#",
    "#",
    "#",
    "",
    "#",
    "6",
    "6",
    "6",
  ],
  [
    "digit_seven",
    "66279",
    "U+102E7",
    "\u102E7",
    "ီ7",
    "ⲍ̅",
    "",
    "",
    "",
    "",
    "ⲍ̅",
    "",
    "",
    "7",
    "",
    "7",
    "-",
    "-",
    "-",
    "Z",
    "7",
    "-",
    "-",
    "-",
    "",
    "7",
    "-",
    "-",
    "-",
    "-",
    "",
    "-",
    "7",
    "7",
    "7",
  ],
  [
    "digit_eight",
    "66280",
    "U+102E8",
    "\u102E8",
    "ီ8",
    "ⲏ̅",
    "",
    "8",
    "",
    "",
    "ⲏ̅",
    "",
    "",
    "8",
    "",
    "8",
    "_",
    "_",
    "_",
    "H",
    "8",
    "_",
    "_",
    "_",
    "",
    "8",
    "_",
    "_",
    "_",
    "_",
    "",
    "_",
    "8",
    "8",
    "8",
  ],
  [
    "digit_nine",
    "66281",
    "U+102E9",
    "\u102E9",
    "ီ9",
    "ⲑ̅",
    "",
    "",
    "",
    "",
    "ⲑ̅",
    "",
    "",
    "9",
    "",
    "9",
    ".",
    ".",
    ".",
    "C",
    "9",
    ".",
    ".",
    ".",
    "",
    "9",
    ".",
    ".",
    ".",
    ".",
    "",
    "",
    "9",
    "9",
    "9",
  ],
  [
    "number_ten",
    "66282",
    "U+102EA",
    "\u102EA",
    "ီA",
    "ⲓ̅",
    "",
    "",
    "",
    "",
    "ⲓ̅",
    "",
    "",
    "0",
    "",
    "0",
    ",",
    "",
    "",
    "I",
    "0",
    ",",
    ",",
    ",",
    "",
    "0",
    ",",
    ",",
    ",",
    ",",
    "",
    '"',
    "0",
    "0",
    "0",
  ],
  [
    "number_twenty",
    "66283",
    "U+102EB",
    "\u102EB",
    "ီB",
    "ⲕ̅",
    "",
    "",
    "",
    "",
    "ⲕ̅",
    "",
    "",
    "",
    "",
    "",
    "1",
    "1",
    "1",
    "K",
    "k#",
    "1",
    "1",
    "1",
    "",
    "Ä",
    "1",
    "1",
    "1",
    "1",
    "",
    "'",
    "",
    "Ä",
    "Ä",
  ],
  [
    "number_thirty",
    "66284",
    "U+102EC",
    "\u102EC",
    "ီC",
    "ⲗ̅",
    "",
    "",
    "",
    "",
    "ⲗ̅",
    "",
    "",
    "",
    "",
    "",
    "2",
    "2",
    "2",
    "L",
    "l#",
    "2",
    "2",
    "2",
    "",
    "Ö",
    "2",
    "2",
    "2",
    "2",
    "",
    "2",
    "",
    "Ö",
    "Ö",
  ],
  [
    "number_forty",
    "66285",
    "U+102ED",
    "\u102ED",
    "ီD",
    "ⲙ̅",
    "",
    "",
    "",
    "",
    "ⲙ̅",
    "",
    "",
    "",
    "",
    "",
    "3",
    "3",
    "3",
    "M",
    "m#",
    "3",
    "3",
    "3",
    "",
    "Ü",
    "3",
    "3",
    "3",
    "3",
    "",
    "3",
    "",
    "Ü",
    "Ü",
  ],
  [
    "number_fifty",
    "66286",
    "U+102EE",
    "\u102EE",
    "ီE",
    "ⲛ̅",
    "",
    "",
    "",
    "",
    "ⲛ̅",
    "",
    "",
    ";",
    "",
    "ß",
    "4",
    "4",
    "4",
    "N",
    "n#",
    "4",
    "4",
    "4",
    "",
    "+",
    "4",
    "4",
    "4",
    "4",
    "",
    "4",
    "",
    "+",
    "+",
  ],
  [
    "number_sixty",
    "66287",
    "U+102EF",
    "\u102EF",
    "ီF",
    "ⲝ̅",
    "",
    "",
    "",
    "",
    "ⲝ̅",
    "",
    "",
    "ä",
    "",
    "´",
    "5",
    "5",
    "5",
    "#",
    "x#",
    "5",
    "5",
    "5",
    "",
    "*",
    "5",
    "5",
    "5",
    "5",
    "",
    "5",
    "",
    "*",
    "*",
  ],
  [
    "number_seventy",
    "66288",
    "U+102F0",
    "\u102F0",
    "ု0",
    "ⲟ̅",
    "",
    "",
    "",
    "",
    "ⲟ̅",
    "",
    "",
    "ö",
    "",
    "^",
    "6",
    "6",
    "6",
    "O",
    "o#",
    "6",
    "6",
    "6",
    "",
    "#",
    "6",
    "6",
    "6",
    "6",
    "",
    "6",
    "",
    "#",
    "#",
  ],
  [
    "number_eighty",
    "66289",
    "U+102F1",
    "\u102F1",
    "ု1",
    "ⲡ̅",
    "",
    "",
    "",
    "",
    "ⲡ̅",
    "",
    "",
    "ü",
    "",
    "°",
    "7",
    "7",
    "7",
    "P",
    "p#",
    "7",
    "7",
    "7",
    "",
    "-",
    "7",
    "7",
    "7",
    "7",
    "",
    "7",
    "",
    "-",
    "-",
  ],
  [
    "number_ninety",
    "66290",
    "U+102F2",
    "\u102F2",
    "ု2",
    "ⲣ̅",
    "",
    "",
    "",
    "",
    "ⲣ̅",
    "",
    "",
    "Ä",
    "",
    "!",
    "8",
    "8",
    "",
    "R",
    "r#",
    "8",
    "8",
    "8",
    "",
    "_",
    "8",
    "8",
    "8",
    "8",
    "",
    "8",
    "",
    "_",
    "_",
  ],
  [
    "number_100",
    "66291",
    "U+102F3",
    "\u102F3",
    "ု3",
    "ϥ̅",
    "",
    "",
    "",
    "",
    "ϥ̅",
    "",
    "",
    "Ö",
    "",
    "§",
    "9",
    "9",
    "9",
    "F",
    "f#",
    "9",
    "9",
    "9",
    "",
    ".",
    "9",
    "9",
    "9",
    "9",
    "",
    "9",
    "",
    ".",
    ".",
  ],
  [
    "number_200",
    "66292",
    "U+102F4",
    "\u102F4",
    "ု4",
    "ⲥ̅",
    "",
    "",
    "",
    "",
    "ⲥ̅",
    "",
    "",
    "Ü",
    "",
    "$",
    "0",
    "0",
    "0",
    "S",
    "c#",
    "0",
    "0",
    "0",
    "",
    "",
    "0",
    "0",
    "0",
    "0",
    "",
    "0",
    "",
    "",
    "",
  ],
  [
    "number_300",
    "66293",
    "U+102F5",
    "\u102F5",
    "ု5",
    "ⲧ̅",
    "",
    "",
    "",
    "",
    "ⲧ̅",
    "",
    "",
    "#",
    "",
    "",
    "ß",
    "ß",
    "ß",
    "T",
    "t#",
    "ß",
    "ß",
    "ß",
    "",
    "ß",
    "ß",
    "ß",
    "ß",
    "ß",
    "",
    "ß",
    "ß",
    "ß",
    "ß",
  ],
  [
    "number_400",
    "66294",
    "U+102F6",
    "\u102F6",
    "ု6",
    "ⲩ̅",
    "",
    "",
    "",
    "ö",
    "ⲩ̅",
    "",
    "",
    "-",
    "",
    "&",
    "´",
    "´",
    "´",
    "U",
    "u#",
    "´",
    "´",
    "´",
    "",
    "´",
    "´",
    "´",
    "´",
    "´",
    "",
    "´",
    "",
    "´",
    "´",
  ],
  [
    "number_500",
    "66295",
    "U+102F7",
    "\u102F7",
    "ု7",
    "ⲫ̅",
    "",
    "",
    "",
    "",
    "ⲫ̅",
    "",
    "",
    "_",
    "",
    "(",
    "^",
    "^",
    "^",
    "V",
    "v#",
    "^",
    "^",
    "^",
    "",
    "^",
    "^",
    "^",
    "^",
    "^",
    "",
    "^",
    "",
    "^",
    "^",
  ],
  [
    "number_600",
    "66296",
    "U+102F8",
    "\u102F8",
    "ု8",
    "ⲭ̅",
    "",
    "",
    "",
    "",
    "ⲭ̅",
    "",
    "",
    ".",
    "",
    ")",
    "°",
    "°",
    "°",
    "Y",
    ",#",
    "°",
    "°",
    "°",
    "",
    "°",
    "°",
    "°",
    "°",
    "°",
    "",
    "°",
    "",
    "°",
    "°",
  ],
  [
    "number_700",
    "66297",
    "U+102F9",
    "\u102F9",
    "ု9",
    "ⲯ̅",
    "",
    "9",
    "",
    "",
    "ⲯ̅",
    "",
    "",
    "x",
    "",
    "=",
    "!",
    "!",
    "!",
    "",
    "'#",
    "!",
    "!",
    "!",
    "",
    "!",
    "!",
    "!",
    "!",
    "!",
    "",
    "!",
    "",
    "!",
    "!",
  ],
  [
    "number_800",
    "66298",
    "U+102FA",
    "\u102FA",
    "ုA",
    "ⲱ̅",
    "",
    "",
    "",
    "",
    "ⲱ̅",
    "",
    "",
    "",
    "",
    "",
    "§",
    "§",
    "§",
    "",
    "w#",
    "§",
    "§",
    "§",
    "",
    "§",
    "§",
    "§",
    "§",
    "§",
    "",
    "§",
    "",
    "§",
    "§",
  ],
  [
    "number_900",
    "66299",
    "U+102FB",
    "\u102FB",
    "ုB",
    "ϣ̅",
    "",
    "7",
    "",
    "",
    "ϣ̅",
    "",
    "",
    "",
    "",
    "\\",
    "$",
    "$",
    "$",
    "",
    "s#",
    "$",
    "$",
    "$",
    "",
    "$",
    "$",
    "$",
    "$",
    "$",
    "",
    "$",
    "",
    "$",
    "$",
  ],
  [
    "number_1000",
    "",
    "",
    "",
    "",
    "ⲁ̿",
    "",
    "",
    "",
    "",
    "ⲁ̿",
    "",
    "",
    "",
    "",
    "~",
    "%",
    "%",
    "%",
    "",
    "",
    "%",
    "%",
    "%",
    "",
    "%",
    "%",
    "%",
    "%",
    "%",
    "",
    "%",
    "",
    "",
    "",
  ],
  [
    "number_2000",
    "",
    "",
    "",
    "",
    "ⲃ̿",
    "",
    "",
    "",
    "",
    "ⲃ̿",
    "",
    "",
    "",
    "",
    "|",
    "&",
    "&",
    "&",
    "",
    "",
    "&",
    "&",
    "&",
    "",
    "&",
    "&",
    "&",
    "&",
    "&",
    "",
    "&",
    "",
    "&",
    "&",
  ],
  [
    "number_3000",
    "",
    "",
    "",
    "",
    "ⲅ̿",
    "",
    "",
    "",
    "",
    "ⲅ̿",
    "",
    "",
    "",
    "",
    "",
    "(",
    "(",
    "(",
    "",
    "",
    "(",
    "(",
    "(",
    "",
    "(",
    "(",
    "(",
    "(",
    "(",
    "",
    "(",
    "",
    "(",
    "(",
  ],
  [
    "number_4000",
    "",
    "",
    "",
    "",
    "ⲇ̿",
    "",
    "",
    "",
    "",
    "ⲇ̿",
    "",
    "",
    "",
    "",
    "",
    ")",
    ")",
    ")",
    "",
    "",
    ")",
    ")",
    ")",
    "",
    ")",
    ")",
    ")",
    ")",
    ")",
    "",
    ")",
    "",
    ")",
    ")",
  ],
  [
    "number_5000",
    "",
    "",
    "",
    "",
    "ⲉ̿",
    "",
    "",
    "",
    "",
    "ⲉ̿",
    "",
    "",
    "",
    "",
    "",
    "=",
    "=",
    "=",
    "",
    "",
    "=",
    "=",
    "=",
    "",
    "=",
    "=",
    "=",
    "=",
    "=",
    "",
    "=",
    "",
    "=",
    "=",
  ],
  [
    "number_6000",
    "",
    "",
    "",
    "",
    "ⲋ̿",
    "",
    "",
    "",
    "",
    "ⲋ̿",
    "",
    "",
    "",
    "",
    "",
    "?",
    "?",
    "",
    "",
    "",
    "?",
    "?",
    "?",
    "",
    "",
    "?",
    "?",
    "?",
    "?",
    "",
    "",
    "",
    "",
    "",
  ],
  [
    "number_7000",
    "",
    "",
    "",
    "",
    "ⲍ̿",
    "",
    "",
    "",
    "",
    "ⲍ̿",
    "",
    "",
    "",
    "",
    "",
    "\\",
    "²",
    "²",
    "",
    "",
    "²",
    "²",
    "²",
    "",
    "²",
    "²",
    "²",
    "²",
    "²",
    "",
    "²",
    "",
    "²",
    "²",
  ],
  [
    "number_8000",
    "",
    "",
    "",
    "",
    "ⲏ̿",
    "",
    "",
    "",
    "",
    "ⲏ̿",
    "",
    "",
    "",
    "",
    "",
    "",
    "³",
    "³",
    "",
    "",
    "³",
    "³",
    "³",
    "",
    "³",
    "³",
    "³",
    "³",
    "³",
    "",
    "³",
    "",
    "³",
    "³",
  ],
  [
    "number_9000",
    "",
    "",
    "",
    "",
    "ⲑ̿",
    "",
    "",
    "",
    "",
    "ⲑ̿",
    "",
    "",
    "",
    "",
    "",
    "|",
    "\\",
    "\\",
    "",
    "",
    "\\",
    "\\",
    "\\",
    "",
    "\\",
    "\\",
    "\\",
    "\\",
    "\\",
    "",
    "",
    "",
    "\\",
    "\\",
  ],
  [
    "colon",
    "58",
    "U+003A",
    "\u003A",
    ":",
    ":",
    "@",
    ":",
    ">",
    "@",
    ":",
    "",
    "",
    "",
    "",
    ":",
    ":",
    ":",
    ":",
    ":",
    ":",
    ":",
    "",
    "",
    "u",
    "",
    "",
    "",
    "",
    "",
    ":",
    "?",
    "",
    ":",
    ":",
  ],
  [
    "semicolon",
    "59",
    "U+003B",
    "\u003B",
    ";",
    ";",
    "&",
    "",
    "^",
    ";",
    ";",
    "",
    "",
    "",
    "",
    ";",
    ";",
    ";",
    ";",
    ";",
    ";",
    ";",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ";",
    "",
    ":",
    "",
    "",
  ],
  [
    "dot",
    "46",
    "U+002E",
    "\u002E",
    ".",
    ".",
    "",
    ".",
    ".",
    "",
    ".",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ".",
    ".",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ".",
    "\\",
    '"',
    "",
    "",
  ],
  [
    "comma",
    "",
    "",
    "",
    ",",
    ",",
    "",
    "",
    "%",
    "",
    ",",
    "",
    "",
    "",
    "",
    ">",
    ">",
    ">",
    ">",
    "",
    "",
    "",
    "",
    "",
    "",
    ">",
    "",
    "",
    "",
    "",
    ",",
    "",
    "'",
    ">",
    ">",
  ],
  [
    "akr_martyrus",
    "",
    "",
    "",
    "⳥",
    "⳥",
    "",
    "=",
    "=",
    "U",
    "⳥",
    "",
    "u",
    "",
    "",
    ".",
    "",
    "",
    "",
    "&",
    "&",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ";",
    "",
    "",
    "",
  ],
  [
    "akr_tchois",
    "11498",
    "U+2CEA;",
    "\u2CEA",
    "⳪",
    "⳪",
    "",
    "_",
    "_",
    "u",
    "'¡'",
    "",
    "",
    "",
    "",
    "%",
    "V",
    "",
    "",
    "%",
    "%",
    "V",
    "V",
    "V",
    "",
    "",
    "V",
    "V",
    "V",
    "V",
    "",
    "V",
    "",
    "",
    "",
  ],
  [
    "akr_pistavros",
    "11495",
    "U+2CE7;",
    "\u2CE7",
    "⳧",
    "⳧",
    "",
    "+",
    "+",
    "+",
    "½",
    "",
    "",
    "",
    "",
    "",
    "~",
    "~",
    "~",
    "*",
    "*",
    "",
    "",
    "",
    "",
    "~",
    "",
    "",
    "",
    "",
    "",
    "",
    ".",
    "~",
    "~",
  ],
  [
    "cross_pommee",
    "128322",
    "U+1F542",
    "\u1F542",
    "🕂",
    "🕂",
    "",
    "",
    "!",
    "",
    "¿",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
  ],
  [
    "east_syriac_cross",
    "9841",
    "U+2671",
    "\u2671",
    "♱",
    "♱",
    "",
    "",
    "#",
    "",
    "^",
    "¼",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
  ],
];

function _switchJimkinAfterLetter(text:string) {
  return convertCopticText('', text, JimkinCombining.after, true);
}
/**
 * Loops the fontsMap to find the character for a given font and either return the unicode value or replace wih another character
 * @param {string} fontName - the name of the font that we want to query 
 * @param {string} char - the character that needs to be replaced 
 * @param {string} replace - the  
 * @returns 
 */
function getOrReplaceCharacterForFont(fontName: string, char: string, replace: string = '') {
  let index = fontsMap[0].indexOf(fontName);
  if (!index) return console.log('font name not found');
  let unicode = 4;
  let row = fontsMap.find(row => row[index] === char);
  if (!row)
    return console.log('Character not found');
  if (!replace)
    return console.log('unicode =', row[unicode]);
  fontsMap[fontsMap.indexOf(row)][index] = replace;
  console.log(fontsMap)
}

function _GetIndexOfACharacterForAGivenFont() {
  const fontName = prompt('Provide the font name', fontsMap[0].join(', '));
  const index = fontsMap[0].indexOf(fontName);
  if (index < 0) return alert("No font with this font name");
  const font = fontsMap.map(row => row[index]);
  const character = eval(prompt('Provide the character for which you want to get the index'));

  const found = font.indexOf(character);
  if (found < 0) return alert("the Charcter is not amongst the fonts characters");
  const unicode = fontsMap.map(row => row[4])[found]

  return alert(`Index = ${found} and the unicode character is ${unicode} and its code is ${unicode.codePointAt(0)}`);
}